#
# DiegOS Operating System source code
#
# Copyright (C) 2012 - 2022 Diego Gallizioli
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#

# TOOLCHAIN_PREFIX defines the toolchain path (if required) and
# the triplet commonly used for cross compiling.
#
# Any value is acceptable, leave blank if not needed.
#
export TOOLCHAIN_PREFIX =

# CPU defines the processor architecture of the target.
#
# Possible values are
# 	ia32
# 	armv4t
# 	armv5te
#
export CPU = ia32

# CPU_SPEC defines a specific processor to be used for code tuning,
# compiler tuning, features enabling or disabling.
# The tuple (CPU, CPU_SPEC) defines completely the instruction set.
# NOTE: some architectures offer zillion of processors, while it
# is absolutely possible and legal to add new values here, be sure
# to test the image before releasing new values.
# NOTE2: Reasonably this cannot be an exhaustive list of processors,
# add the most meaningful - or the one used for actual images.
#
# Possible values are
# 	pentium
# 	pentium2
# 	pentium3
# 	pentium4
# 	core2
# 	k6
# 	athlon
#
#
export CPU_SPEC = pentium

# BYTE_ORDER defines the endianness of the processor.
#
# Possible values are
# 	_LITTLE_ENDIAN for little endian
# 	_BIG_ENDIAN for big endian
#
export BYTE_ORDER = _LITTLE_ENDIAN

# CACHE_ALN defines the cache line size in bytes.
#
# Possible values are
# 	[1..N] any positive number matching the
# 	processor cache line size
#
export CACHE_ALN = 64

# SUPPORT_FP declares if the system must support hardware
# floating point operations.
# NOTE: The processor is supposed to support hardware floating
# point operations if SUPPORT_FP is set to y.
# This has an impact on context switching.
# Possible values are
# 	y
# 	n
#
export SUPPORT_FP = y

# SUPPORT_SIMD declares if the system must support hardware SIMD
# instructions.
# NOTE: The processor is supposed to support SIMD instructions
# if SUPPORT_SIMD is set to y.
# This has an impact on context switching.
#
# Possible values are
# 	y
# 	n
#
export SUPPORT_SIMD = n

# PLATFORM defines the board or the platform of the target.
# The platform describes a set of peripherals, devices, and
# properties.
# A SoC is a clear example of delimited, closed platform.
#
# Possible values are
# 	pc
#
export PLATFORM = pc

# DBG_MODULE enables debug traces support.
# Traces are not visible by default, they must be enabled
# module by module (file by file) defining inside the module
# (the file) a secondary define DBG_MODULE_ON.
# This way it is possible to selectively trace only the code
# of interest.
#
# Possible values are
# 	y
# 	n
#
export DBG_MODULE = n

# MAX_THREADS defines the maximum number of threads that the system
# can spawn and execute simultaneously at runtime.
# The defined number has an impact on memory usage.
# This value is not limiting the total amount of threads that can
# be spawned or killed in the uptime of the system, it limits the
# concurrent amount of threads in the system.
#
# Possible values are
# 	[4..255]
#
export MAX_THREADS = 20

# DEFALT_CLOCK_RES defines the default clock ticking per second.
# This value is a reference for clock ticks accounting but NOT a reference
# for interrupt frequency, as the platform might support a tickless clock
# implementation.
#
# Possible values are
# 	[100..1000]
#
export DEFAULT_CLOCK_RES = 100

# DEFAULT_STDIN, DEFAULT_STDOUT and DEFAULT_STDERR define the devices
# to be used as standard input/output.
#
# Possible values are
# 	"/dev/<anyname>"
#
export DEFAULT_STDIN  = "/dev/uart0"
export DEFAULT_STDOUT = "/dev/uart0"
export DEFAULT_STDERR = "/dev/uart0"

# DEFAULT_DBG_TTY defines the driver name to be used for kprintf,
# printouts from the kernel.
# The specified driver will be initialized as soon as possible to
# have immediate logs and - possibly - immediate debugging.
# The driver has to drive a character device.
#
# Possible values are
# 	<drvname>
#
export DEFAULT_DBG_TTY "vgtty0"

# IOMEMORY_SIZE defines the amount of I/O memory to be reserved
# for uncached operations - memory accessed by hardware.
#
# Possible values are
#       [0..N] any positive number not exceeding the total
#              available memory.
#              Memory is reported in bytes.
#
export IOMEMORY_SIZE = 1048576

# MAX_IO_ALLOCS defines the maximum number of partitions of the
# I/O memory.
# Calls to iomalloc() cannot return more than MAX_IO_ALLOCS valid
# pointers.
# Depending on how much I/O memory is in use, the number of usable
# allocations might be less than MAX_IO_ALLOCS.
#
# Possible values are
#       [1..N] any positive number, suggested powers of two.
#
export MAX_IO_ALLOCS = 128
