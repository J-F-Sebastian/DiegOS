/*
 * DiegOS Operating System source code
 *
 * Copyright (C) 2012 - 2015 Diego Gallizioli
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _STDLIB_H_
#define _STDLIB_H_

#include <stddef.h>
#include <cdefs.h>

#define EXIT_FAILURE       1	/* standard error return using exit() */
#define EXIT_SUCCESS       0	/* successful return using exit() */
#define RAND_MAX       32767	/* largest value generated by rand() */
#define MB_CUR_MAX         1	/* max value of multibyte character in MINIX */

typedef struct {
	int quot, rem;
} div_t;

typedef struct {
	long quot, rem;
} ldiv_t;

/* The types are div_t, and ldiv_t. */

/* Function Prototypes. */

int abs(int n);
long labs(long n);
double atof(const char *s);
int atoi(const char *s);
long atol(const char *s);
void *calloc(size_t nelem, size_t elsize);
void *malloc(size_t size);
void *realloc(void *p, size_t size);
void free(void *p);
void abort(void);
void exit(int status);
int atexit(void (*_func) (void));
div_t div(int _numer, int denom);
char *getenv(const char *name);

ldiv_t ldiv(long numer, long denom);
int mblen(const char *s, size_t n);
size_t mbstowcs(wchar_t * pwcs, const char *s, size_t n);
int mbtowc(wchar_t * pwc, const char *s, size_t n);
int rand(void);
void srand(unsigned int seed);
double strtod(const char *nptr, char **endptr);
long strtol(const char *nptr, char **endptr, int base);
int system(const char *string);
size_t wcstombs(char *s, const wchar_t * pwcs, size_t n);
int wctomb(char *s, wchar_t wchar);

void *bsearch(const void *key,
	      const void *base,
	      size_t nmemb, size_t size, int (*compar) (const void *, const void *));
void qsort(void *base, size_t nmemb, size_t size, int (*compar) (const void *, const void *));

unsigned long int strtoul(const char *nptr, char **endptr, int base);
const char *getprogname(void);
void setprogname(const char *progname);

#endif
